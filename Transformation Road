Transformation Road from a Manual Tester to an Automation Developer
Background: 
I joined HSBC XARA programme as a manual tester in 2015. Each day, my life was largely filled with the following 2 items:
a) Reconciliation  (compare compare compare)
b) UI testing (left click, right click, double click)

On the reconciliation, we used a comparator written in Java. In terms of UI test automation, it was written in C#, integrated in TAP.

Chapter 1:  Bug fixing
The first challenge I faced in the transformation journey, was bug fixing. There were a few bugs consistently increasing our manual effort in both comparator and TAP. We had to get them resolved as early as possible. Here is one example:
comparator issue: 
Expected: comparator use key columns to identify each row in two files then compare. If duplicate rrecords found, write the duplicate records into a separate sheet of result files and continues to compare the rest of the rows.
Actual: Comparator stops comparing once duplicate keys found

The example above was just a small piece of all. There were more issues found on TAP side which were wrtten in C# for Trader Desktop cases. Some were not well designed and kept breaking cases if specific data input. Some were even unusable as UI changed.
With all these issues facing, I had to read through the Java and C# codes and understand them as fast as I could, so that I could locate the root cause and fix the annoying bugs. After getting all the issues resolved, I managed to improved not only the test efficiency but also the ability of reading code.

~~~~~~~~here attached the commit of the issue fix~~~~~~~~~~~~~

Chapter 2:  Get to know Python
Even though I was able to fix some defects and did enhancement in the comparators and TAP. It doesn't mean that I already became an expert of Java and C#. I was just familiar with our test codes and made some small changes based on the existing code struture. There is still a long way to go on this transformation journey. 
As mentioned previously, comparator and TAP XARA version were written in Java and C# respectively. It was not easy for me to learn both Java and C# at the same time, and would be quite a long time before being able to setup my own Java/C# project.
So is there a language easy to use and more productive at the same time? The answer probaly goes to: Python!
Python is a really powerful high-level programming language. It has simple easy-to-use syntax and various 3rd party libraries, allowing people to write programs having greater functionality with fewer lines of code. It was just the perfect language for people like me who had little experience in programming. 
So I started to watch the online courses of python, setup python environments to all my PCs and read 

Chapter 3: Various Python Libs -- I love pandas
Start with simple scripts
read/write docs, do simple calculations
Write simple scripts to learn to use libs

Chapter 4: Apply your script to the projects
apply the script in project:  read/compare csv,  find and unzip docs,  generate pivot table dashboard. download artifacts and compare

The more I learn today, the more I hate the codes written yesterday

Chapter 5: Selenium & Robot Framework
web ui test with selenium,  build my own common modules

Special thanks to Mr Tom and Chunrong, one was our VS developer, the ohter has left the team, offered me a lot of support

Seeking for change:
improve efficiency of recon process
code enhancement based on new feature in UI
automation setup for new UI

how:
start with learning python,  it is a 
watch online courses from diff websites, one is bilibili

start with simple script: 
advanced:  
