Transformation Road from a Manual Tester to an Automation Developer
Background: Time to make a change
I joined HSBC XARA programme as a manual tester in 2015. Each day, my life was largely filled with the following 2 items:
a) Reconciliation  (compare compare compare)
b) UI testing (left click, right click, double click)

Doing the repetitive work everyday is boring and inefficient. Even we already had an automation platform called TAP to support UI testing, we were still lack of programming skills to debug cases by ourselves. We relied on the XFOS automation team (who developed the tool)so much when issues occur. One day, bad news came. The last developer, who worked on XARA automation before, decided to leave HSBC. Then no one would be able to support us from XFOS team due to resource constraints. At that time we realized its time to make a change!

Chapter 1:  Bug fixing
I didn't expect that, the first challenge I had to face, is bug fixing.
There are a few bugs consistently increasing our manual effort. We wanted to get them fixed for quite a long time. Here is one example:
comparator(Java): 
Expected: comparator use key columns to identify unique record in two files and compare. If duplicate rrecords found, write the duplicate records into a separate sheet of result files and continues to compare the rest of rows.
Actual: Comparator stops comparing once duplicate keys found

The example above was just a small piece of the bugs. There were more issues found on TAP side. Those were wrtten in C# for Trader Desktop cases. Some were not well designed and kept breaking if specific data input. Some were even unusable as UI changed.
All the problems facing at that time didn't give us enough time to breath and picked up the programming skills slowly. I had to read through the code and understand it as fast as I could, so that I could locate the root cause and fix the annoying bugs. 
~~~~~~~~here attached the commit of the issue fix~~~~~~~~~~~~~

Chapter 2:  Get to know Python
Even though I was able to fix some bugs and did enhancement in comparators and TAP. It doesn't mean that I already became an expert of Java and C#. I was just familiar with our test codes and made some small changes based on the existing code struture. There is still a long way to go on this transformation journey. 
Unable to learn both Java and C# in a short time. A friend of mine gave me an advice: Python.
Python is a really powerful high-level programming language. It has simple easy-to-use syntax and various 3rd party libraries, allowing people to write programs having greater functionality with fewer lines of code. It was just the perfect language for people like me who had little experience in programming. 
So I started to watch the online courses of python, read python codes written by someone else

Chapter 3: Various Python Libs -- I love pandas
Start with simple scripts
read/write docs, do simple calculations
Write simple scripts to learn to use libs

Chapter 4: Apply your script to the projects
apply the script in project:  read/compare csv,  find and unzip docs,  generate pivot table dashboard. download artifacts and compare

The more I learn today, the more I hate the codes written yesterday

Chapter 5: Selenium & Robot Framework
web ui test with selenium,  build my own common modules

Special thanks to Mr Tom and Chunrong, one was our VS developer, the ohter has left the team, offered me a lot of support

Seeking for change:
improve efficiency of recon process
code enhancement based on new feature in UI
automation setup for new UI

how:
start with learning python,  it is a 
watch online courses from diff websites, one is bilibili

start with simple script: 
advanced:  
